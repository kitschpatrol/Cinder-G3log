// This source file was auto-generated by ClassMate++
// Created: 11 Oct 2015 5:21:41 pm
// Copyright (c) 2015, HurleyWorks

#include "Log.h"

// ctor
Log::Log(const std::string &logFolder, const std::string &appName)
		: logFolder(logFolder)
		, logWorker(g3::LogWorker::createLogWorker())
		, fileHandle(logWorker->addDefaultLogger(appName, logFolder)) {
	g3::initializeLogging(logWorker.get());
	g3::setFatalExitHandler(&Log::onFatalError);

#if WIN32
	g3::setFatalPreLoggingHook([] { __debugbreak(); });
#endif

	// g3::only_change_at_initialization::setLogLevel(TESTING, false);
	g3::only_change_at_initialization::setLogLevel(DBUG, true);
	g3::only_change_at_initialization::setLogLevel(INFO, true);
	g3::only_change_at_initialization::setLogLevel(WARNING, true);
	// g3::only_change_at_initialization::setLogLeve(CRITICAL, true);
}

// dtor
Log::~Log() {
	LOG(DBUG) << __FUNCTION__;
}

void Log::ReverseToOriginalFatalHandling() {
#if !(defined(DISABLE_FATAL_SIGNALHANDLING))
	if (SIG_ERR == signal(SIGABRT, SIG_DFL))
		perror("signal - SIGABRT");

	if (SIG_ERR == signal(SIGFPE, SIG_DFL))
		perror("signal - SIGABRT");

	if (SIG_ERR == signal(SIGSEGV, SIG_DFL))
		perror("signal - SIGABRT");

	if (SIG_ERR == signal(SIGILL, SIG_DFL))
		perror("signal - SIGABRT");

	if (SIG_ERR == signal(SIGTERM, SIG_DFL))
		perror("signal - SIGABRT");
#endif
}

void Log::onFatalError(g3::FatalMessagePtr fatal_message) {
	ReverseToOriginalFatalHandling();

	// maybe save your work here

	// now ready to exit, instead of reinventing the wheel we do it the g3log way
	g3::internal::pushFatalMessageToLogger(fatal_message);
}
